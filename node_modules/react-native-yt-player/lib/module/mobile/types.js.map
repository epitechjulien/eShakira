{"version":3,"sources":["types.tsx"],"names":["YTWebViewState","YTWebViewDefaultProps","style","autoPlay","onReady","onError","onPlay","onPause","onEnd","onPlaying","onDurationReady","onStateChange","onPlaybackRateChange","onPlaybackQualityChange","PlayerDefaultProps","onFullScreen","loop","showFullScreenButton","onStart"],"mappings":"+DAAA,UAAYA,CAAAA,cAAZ,C,UAAYA,c,EAAAA,c,CAAAA,c,8BAAAA,c,CAAAA,c,qBAAAA,c,CAAAA,c,yBAAAA,c,CAAAA,c,uBAAAA,c,CAAAA,c,6BAAAA,c,CAAAA,c,sBAAAA,c,GAAAA,c,MAsCZ,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,CACnCC,KAAK,CAAE,EAD4B,CAEnCC,QAAQ,CAAE,KAFyB,CAGnCC,OAAO,CAAE,kBAAM,CAAE,CAHkB,CAInCC,OAAO,CAAE,kBAAM,CAAE,CAJkB,CAKnCC,MAAM,CAAE,iBAAM,CAAE,CALmB,CAMnCC,OAAO,CAAE,kBAAM,CAAE,CANkB,CAOnCC,KAAK,CAAE,gBAAM,CAAE,CAPoB,CAQnCC,SAAS,CAAE,oBAAM,CAAE,CARgB,CASnCC,eAAe,CAAE,0BAAM,CAAE,CATU,CAUnCC,aAAa,CAAE,wBAAM,CAAE,CAVY,CAWnCC,oBAAoB,CAAE,+BAAM,CAAE,CAXK,CAYnCC,uBAAuB,CAAE,kCAAM,CAAE,CAZE,CAA9B,CA6BP,MAAO,IAAMC,CAAAA,kBAAkB,kBAC1Bb,qBAD0B,EAE7Bc,YAAY,CAAE,uBAAM,CAAE,CAFO,CAG7BC,IAAI,CAAE,KAHuB,CAI7BC,oBAAoB,CAAE,IAJO,CAK7BC,OAAO,CAAE,kBAAM,CAAE,CALY,EAAxB","sourcesContent":["export enum YTWebViewState {\n  UNSTARTED = -1,\n  ENDED = 0,\n  PLAYING = 1,\n  PAUSED = 2,\n  BUFFERING = 3,\n  CUED = 5\n}\n\nexport interface YTWebViewProps {\n  videoId: string;\n  autoPlay?: Boolean;\n  style?: {};\n  onReady?: () => void;\n  onError?: () => void;\n  onPlay?: () => void;\n  onPlaying?: (s: number) => void;\n  onPause?: () => void;\n  onEnd?: () => void;\n  onDurationReady?: (s: number) => void;\n  onStateChange?: (s: YTWebViewState) => void;\n  onPlaybackRateChange?: () => void;\n  onPlaybackQualityChange?: () => void;\n}\n\nexport interface PlayerState {\n  ready: Boolean;\n  layoutReady: Boolean;\n  fullScreen: Boolean;\n  play: Boolean;\n  duration: number;\n  currentTime: number;\n  layout: {\n    top: number;\n    left: number;\n  };\n}\n\nexport const YTWebViewDefaultProps = {\n  style: {},\n  autoPlay: false,\n  onReady: () => {},\n  onError: () => {},\n  onPlay: () => {},\n  onPause: () => {},\n  onEnd: () => {},\n  onPlaying: () => {},\n  onDurationReady: () => {},\n  onStateChange: () => {},\n  onPlaybackRateChange: () => {},\n  onPlaybackQualityChange: () => {}\n};\n\nexport interface PlayerProps extends YTWebViewProps {\n  loop: Boolean;\n  topBar?: ({\n    play,\n    fullScreen\n  }: {\n    play?: Boolean;\n    fullScreen?: Boolean;\n  }) => React.ReactNode;\n  showFullScreenButton?: Boolean;\n  onFullScreen?: (fullscreen: Boolean) => void;\n  onStart?: () => void;\n}\n\nexport const PlayerDefaultProps = {\n  ...YTWebViewDefaultProps,\n  onFullScreen: () => {},\n  loop: false,\n  showFullScreenButton: true,\n  onStart: () => {}\n};\n"]}